/**
 * Solution by Luis Galotti
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

#include <stdio.h>
using namespace std;
const int MAX_DIVISORS = 500;

int findDivisors(long long number){
    int divisors = 1;
    for (int i = 2; i <= number; i++)
	  {
	    int exponent = 0;
	    while (number % i == 0) {
	        exponent++; 
	        number /= i;
	    }   
	    divisors *= (exponent+1);
	  }
	return divisors;
}    

int main()
{   
   /*
   A triangular number can be respresented like:
   1   2   3
   *   *   *
       **  **
           ***
   
   So, you can transform it easily to a rectangle doubling the dots
   
   1   2   3
   *-  *-- *---
       **- **--
           ***-
           
    Then, a easy way to create a triangle number is: 
    x = n(n+1)/2
   
   */
   int i = 3;
   long long number;
   bool continuar = true;
   while (continuar){
       number = (i*i+i) / 2;
       if (findDivisors(number) >= MAX_DIVISORS){
           continuar = false;
       }
       i++;
   }
   
   
  printf("Solution =  %llu", number);

   return 0;
}
